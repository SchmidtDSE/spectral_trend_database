{"kind":"Notebook","sha256":"160e1d3b224d59a4f08eb0b3b474e64afbac40e71b807b6a042f0edcf9d6c0d4","slug":"spectral-trends","location":"/nb/spectral_trends.ipynb","dependencies":[],"frontmatter":{"title":"Biomass Yield and Spectral Trends","content_includes_title":false,"kernelspec":{"name":"stdb","display_name":"stdb","language":"python"},"authors":[{"nameParsed":{"literal":"Brookie Guzder-Williams","given":"Brookie","family":"Guzder-Williams"},"name":"Brookie Guzder-Williams","orcid":"0000-0001-6855-8260","corresponding":true,"email":"bguzder-williams@berkeley.edu","affiliations":["dse","ucb"],"id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Maya Weltman-Fahs","given":"Maya","family":"Weltman-Fahs"},"name":"Maya Weltman-Fahs","affiliations":["dse","ucb"],"id":"contributors-myst-generated-uid-1"}],"github":"https://github.com/SchmidtDSE/map_something","affiliations":[{"id":"dse","name":"The Eric and Wendy Schmidt Center for Data Science & Environment"},{"id":"ucb","name":"University of California, Berkeley"}],"exports":[{"format":"ipynb","filename":"spectral_trends.ipynb","url":"/build/spectral_trends-df5f611174e42f88745f57076393c29c.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"code","lang":"","value":"date: 2024-12-12\nauthors:\n    - name: Brookie Guzder-Williams\naffiliations:\n    - University of California Berkeley, The Eric and Wendy Schmidt Center for Data Science & Environment\nlicense: CC-BY-4.0","position":{"start":{"line":3,"column":1},"end":{"line":10,"column":1}},"key":"qgoeboxHHV"}],"key":"uS0vpsGaHH"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"This notebook uses DSE’s ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hT24RX4ZNi"},{"type":"link","url":"https://github.com/SchmidtDSE/spectral_trend_database","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Spectral Trend Database","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TFffmqMmIs"}],"urlSource":"https://github.com/SchmidtDSE/spectral_trend_database","error":true,"key":"glNlHrihk5"},{"type":"text","value":" (STDB) to\nproduce and interactive chart displaying Biomass Yield vs a number of different spectral incides over time.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SNRmwlBbwi"}],"key":"OT3RunIRb5"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Fetch Data for a random point: We use STDS’s ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"VgssiZZgKF"},{"type":"link","url":"https://github.com/SchmidtDSE/spectral_trend_database/blob/main/spectral_trend_database/query.py","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"query module","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Y2FElpixrY"}],"urlSource":"https://github.com/SchmidtDSE/spectral_trend_database/blob/main/spectral_trend_database/query.py","data":{"kind":"file","org":"SchmidtDSE","repo":"spectral_trend_database","reference":"main","file":"spectral_trend_database/query.py","raw":"https://raw.githubusercontent.com/SchmidtDSE/spectral_trend_database/main/spectral_trend_database/query.py"},"internal":false,"protocol":"github","key":"yYZjMO4IyU"},{"type":"text","value":" and in particular the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ImIjd4AnhD"},{"type":"link","url":"https://github.com/SchmidtDSE/spectral_trend_database/blob/54146cf058e2180829e2c169b37c18ddf62b68a0/spectral_trend_database/query.py#L21-L114","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"inlineCode","value":"QueryConstructor","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ctPAlrFSkv"}],"urlSource":"https://github.com/SchmidtDSE/spectral_trend_database/blob/54146cf058e2180829e2c169b37c18ddf62b68a0/spectral_trend_database/query.py#L21-L114","data":{"kind":"file","org":"SchmidtDSE","repo":"spectral_trend_database","reference":"54146cf058e2180829e2c169b37c18ddf62b68a0","file":"spectral_trend_database/query.py","from":21,"to":114,"raw":"https://raw.githubusercontent.com/SchmidtDSE/spectral_trend_database/54146cf058e2180829e2c169b37c18ddf62b68a0/spectral_trend_database/query.py"},"internal":false,"protocol":"github","key":"A9NHT6H7lX"},{"type":"text","value":" to generate a ...","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ZXxzikMANq"}],"key":"DLnlDJgpDT"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Build Chart","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rkyrQXpcql"}],"key":"LDVOvIpx2h"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Save Chart JSON to improve responsiveness of chart","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"qmYOsL5VYe"}],"key":"PJDkNEso15"}],"key":"dFEw1oz81H"}],"key":"ZOB0w77uI0"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"wkkEpRF4SM"},{"type":"heading","depth":2,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"IMPORTS","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"rAbRsBiLUP"}],"identifier":"imports","label":"IMPORTS","html_id":"imports","implicit":true,"key":"pqnw2YZChz"}],"key":"cGZk7sw1GP"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from importlib import reload\nfrom typing import Callable, Union, Optional, Literal, TypeAlias, Sequence, Any\nimport re\nfrom pprint import pprint\nimport random\nimport pandas as pd\nimport numpy as np\nimport xarray as xr\nimport tensorflow as tf\nfrom IPython.display import HTML\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport altair as alt\nfrom spectral_trend_database.config import config as c\nfrom spectral_trend_database import query\nfrom spectral_trend_database import utils\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import HistGradientBoostingClassifier\nfrom sklearn import metrics","key":"lgBczuCFv2"},{"type":"output","id":"9Tvx-dQIJbfyU0nyYyxif","data":[],"key":"gdFqplgCdF"}],"key":"nzBr01V26H"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"QDT5pcD1y5"},{"type":"heading","depth":2,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"CONFIG","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"cD4xWapJ76"}],"identifier":"config","label":"CONFIG","html_id":"config","implicit":true,"key":"sCPPTqedaf"}],"key":"zE86jzADWR"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"BQ_PREFIX = 'dse-regenag.BiomassTrends'\nSAMPLE_FRAC = 0.0005\nYEAR_START = 2008\nYEAR_END = 2020\nSTART_MMDD = '11-01'\nEND_MMDD = START_MMDD\nATTR_COLS = [\n    'sample_id',\n    'lon',\n    'lat']\nLIST_ATTRS = [\n    'year',\n    'biomass',\n    'crop_type']\nCHART_DATA_PATH = 'spectral_trends.chart_data.json'","key":"zp4nKdzthw"},{"type":"output","id":"NQ0vwwxkDkNiY9PeyKUBe","data":[],"key":"xiLGItyjUf"}],"key":"ebe3PczLSZ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"UAHmbqzAmw"},{"type":"heading","depth":2,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"HELPER METHODS","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"p836cQfiJs"}],"identifier":"helper-methods","label":"HELPER METHODS","html_id":"helper-methods","implicit":true,"key":"ZoNkhzWszg"}],"key":"md89yE5Ojc"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"def print_list(lst, max_len=7, view_size=3, sep=', ', connector=' ... '):\n    size = len(lst)\n    if size <= max_len:\n        lst_str = sep.join(lst)\n    else:\n        head = sep.join(lst[:view_size])        \n        tail = sep.join(lst[-view_size:])\n        lst_str = f'{head}{connector}{tail}  [{size}]'\n    print(lst_str)\n\ndef line(marker='-', length=100):\n    print(marker*length)","key":"AC79Gor9K3"},{"type":"output","id":"Xqdfm3BadufyvT-H0lxL6","data":[],"key":"S0aIrBWrsj"}],"key":"n95cFUcXqA"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"cC5vLkHS0d"},{"type":"heading","depth":2,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"STDB DATABASE INFO","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"WlVmNaNfu0"}],"identifier":"stdb-database-info","label":"STDB DATABASE INFO","html_id":"stdb-database-info","implicit":true,"key":"lMZPDIO8iZ"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"First we’ll take a quick peak at the what is in the STDB database","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"kpvQjV3ljV"}],"key":"KZ3LE3eOOP"}],"key":"l4B5jOQba4"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"YIELD_TABLE = 'SCYM_YIELD'\nSMOOTHED_INDICES_TABLE = 'SMOOTHED_INDICES_V1'\nIDENT_DATE_COLUMNS = ['sample_id', 'year', 'date']","key":"MVFg1dXSzR"},{"type":"output","id":"xtmEf32KxBqrSxIgfWdtf","data":[],"key":"aat9h23L1p"}],"key":"HE5beNHuJS"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"COLUMN_NAMES = {}\nprint('DATABASE INFO')\nline()\nquery = reload(query)\ntable_names = query.table_names()\nprint('TABLES:')\npprint(table_names)\nfor table_name in [YIELD_TABLE, SMOOTHED_INDICES_TABLE]:\n    COLUMN_NAMES[table_name] = query.column_names(table_name, run_query=True)\n    print(f'\\n{table_name}:')\n    print_list(COLUMN_NAMES[table_name])\nline()","key":"mEiiGfzaz1"},{"type":"output","id":"jtIJJIBeogxn_8ZG3Tvr6","data":[{"name":"stdout","output_type":"stream","text":"DATABASE INFO\n----------------------------------------------------------------------------------------------------\nTABLES:\n['SMOOTHED_INDICES_V1',\n 'INDICES_STATS_V1',\n 'LANDSAT_RAW_MASKED',\n 'RAW_INDICES_V1',\n 'SAMPLE_POINTS',\n 'INDICES_STATS_V1_GROWING_SEASON',\n 'INDICES_STATS_V1_OFF_SEASON',\n 'ADMINISTRATIVE_BOUNDARIES',\n 'SCYM_YIELD',\n 'MACD_INDICES_V1']\n\nSCYM_YIELD:\nbiomass, crop_type, year, sample_id\n\nSMOOTHED_INDICES_V1:\nndbr, ndvi, grvi ... sample_id, rdvi, year  [39]\n----------------------------------------------------------------------------------------------------\n"}],"key":"t91cq8Obk1"}],"key":"XgU3DQfjsS"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"INDICES = [c for c in COLUMN_NAMES[SMOOTHED_INDICES_TABLE] if c not in IDENT_DATE_COLUMNS]\nprint_list(INDICES)","key":"zuiIihMtW5"},{"type":"output","id":"e5NRL-s4bv7G5y_aPrM-r","data":[{"name":"stdout","output_type":"stream","text":"ndbr, ndvi, grvi ... si, nli, rdvi  [36]\n"}],"key":"t2rFLkIIJT"}],"key":"KGrDWRINrr"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"qlrRoL39L0"},{"type":"heading","depth":2,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"1. Fetch Data","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"DeXDpN4So5"}],"identifier":"id-1-fetch-data","label":"1. Fetch Data","html_id":"id-1-fetch-data","implicit":true,"key":"Gu48AnSKih"}],"key":"SQU5fZRVNp"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"code","lang":"","value":"a. select a small number of sample ids","key":"WHQLNxc9cl"}],"key":"xDkq46KQ5H"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"qc = query.QueryConstructor('SAMPLE_POINTS', table_prefix=BQ_PREFIX)\nqc.select('sample_id')\nqc.append(f'WHERE RAND() < {SAMPLE_FRAC}')\nsample_ids_df = query.run(sql=qc.sql(), print_sql=True)\nsample_ids_df = sample_ids_df.drop_duplicates()\nprint('nb_samples:', sample_ids_df.shape[0])","key":"w30Rrblec5"},{"type":"output","id":"AwYq1ZNSSyuppVlEiru5P","data":[{"name":"stdout","output_type":"stream","text":"[info] spectral_trend_database.query.run: SELECT sample_id FROM `dse-regenag.BiomassTrends.SAMPLE_POINTS` WHERE RAND() < 0.0005\nnb_samples: 10\n"}],"key":"clb98yGFF4"}],"key":"pVgzE06rwr"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"code","lang":"","value":"b. fetch data for selected samples","key":"aTP3LfFn7P"}],"key":"R3NXKZkPFN"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"def fetch_yield_and_trend_data(\n        year_start: int,\n        year_end: Optional[int] = None,\n        sample_id: Optional[Union[list[str], str]] = None,\n        print_sql: Optional[bool] = False,\n        limit: Optional[int] = None) -> pd.DataFrame:\n    \"\"\"\n    Builds and Executes a SQL Query to get all data\n    form a given set of sample_ids during a specified time \n    period.\n    \n    Args: \n        year_start (int): start year to select data\n        year_end (Optional[int] = None): \n            last year to select data from (inclusive). if None use <year_start>\n        sample_id (Optional[Union[list[str], str]] = None)\n            sample_id or list of sample-ids of data to select. if none select \n            from all samples.\n        print_sql (Optional[bool] = False)\n        limit (Optional[int] = None)\n\n    Returns:\n        pd.DataFrame of smoothed-spectral-indices\n    \"\"\"\n    if year_end is None: \n        year_end=year_start\n    qc = query.QueryConstructor(\n        'SAMPLE_POINTS', \n        table_prefix=BQ_PREFIX,\n        using=['sample_id'],  \n        how='inner')\n    qc.join('SCYM_YIELD')\n    qc.join('SMOOTHED_INDICES_V1', 'sample_id', 'year')\n    if sample_id:\n        if isinstance(sample_id, list):\n            sample_id = [f\"'{s}'\" for s in sample_id]\n            sample_ids = f'({\", \".join(sample_id)})'\n            qc.where(sample_id=sample_ids, sample_id_op='in')\n        else:\n            qc.where(sample_id=sample_id)\n    qc.where('SMOOTHED_INDICES_V1', year=year_start, year_op='>=')\n    qc.where('SMOOTHED_INDICES_V1', year=year_end, year_op='<=')\n    df = query.run(sql=qc.sql(), print_sql=print_sql)\n    return df","key":"LPd9FLmwcK"},{"type":"output","id":"pPmP8_2gI15x38TOLZOxQ","data":[],"key":"DGWisEL9Ng"}],"key":"k7lHrlKb1m"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"data = fetch_yield_and_trend_data(\n    year_start=YEAR_START,\n    year_end=YEAR_END,\n    sample_id=sample_ids_df.sample_id.tolist(),\n    print_sql=True)\n\nprint('shape:', data.shape)\ndata.sample(3)","key":"Z2H5eivmpZ"},{"type":"output","id":"NchStOW4xMIil1v4iSr4V","data":[{"name":"stdout","output_type":"stream","text":"[info] spectral_trend_database.query.run: SELECT * FROM `dse-regenag.BiomassTrends.SAMPLE_POINTS` INNER JOIN `dse-regenag.BiomassTrends.SCYM_YIELD` USING (sample_id) INNER JOIN `dse-regenag.BiomassTrends.SMOOTHED_INDICES_V1` USING (sample_id, year) WHERE `dse-regenag.BiomassTrends.SAMPLE_POINTS`.sample_id in ('9zg4c1qgqku', '9zmhp42txzr', '9zs4bx6nhpk', '9zv00u7vv7r', 'cbhb01bbyjy', 'dp0e5zwyq3r', 'dp0rw10qucn', 'dp1hxcshs9g', 'dp1z8bd5vje', 'dp2t1cqfz0z') AND `dse-regenag.BiomassTrends.SMOOTHED_INDICES_V1`.year >= 2008 AND `dse-regenag.BiomassTrends.SMOOTHED_INDICES_V1`.year <= 2020\nshape: (122, 46)\n"},{"output_type":"execute_result","execution_count":9,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sample_id</th>\n      <th>year</th>\n      <th>geohash_5</th>\n      <th>geohash_7</th>\n      <th>geohash_9</th>\n      <th>lon</th>\n      <th>lat</th>\n      <th>biomass</th>\n      <th>crop_type</th>\n      <th>ndbr</th>\n      <th>...</th>\n      <th>msr</th>\n      <th>tvi</th>\n      <th>si1</th>\n      <th>rvi</th>\n      <th>tdvi</th>\n      <th>osavi</th>\n      <th>si</th>\n      <th>nli</th>\n      <th>date</th>\n      <th>rdvi</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>17</th>\n      <td>9zmhp42txzr</td>\n      <td>2010</td>\n      <td>9zmhp</td>\n      <td>9zmhp42</td>\n      <td>9zmhp42tx</td>\n      <td>-93.910104</td>\n      <td>41.497719</td>\n      <td>2338</td>\n      <td>corn</td>\n      <td>[0.8020385168710418, 0.761111421352999, 0.7212...</td>\n      <td>...</td>\n      <td>[2.833344026642882, 2.605392583520121, 2.39049...</td>\n      <td>[1.18813572972331, 1.1612336370067855, 1.13585...</td>\n      <td>[0.04697344634080947, 0.05942996108841286, 0.0...</td>\n      <td>[14.497812856094473, 13.271434815748242, 12.11...</td>\n      <td>[0.7922603813634755, 0.7408201033375185, 0.692...</td>\n      <td>[0.6888106469336722, 0.6450891646813475, 0.603...</td>\n      <td>[0.030679068250658387, 0.043937479459377066, 0...</td>\n      <td>[0.8447933525916264, 0.7432393664406607, 0.646...</td>\n      <td>[2009-09-05T00:00:00.000000000, 2009-09-06T00:...</td>\n      <td>[0.6436694696741146, 0.6028117506307256, 0.564...</td>\n    </tr>\n    <tr>\n      <th>97</th>\n      <td>dp1hxcshs9g</td>\n      <td>2019</td>\n      <td>dp1hx</td>\n      <td>dp1hxcs</td>\n      <td>dp1hxcshs</td>\n      <td>-88.247483</td>\n      <td>40.175038</td>\n      <td>933</td>\n      <td>soy</td>\n      <td>[0.5416618662580623, 0.49794495603168176, 0.45...</td>\n      <td>...</td>\n      <td>[1.3396010438805517, 1.2521736265218133, 1.168...</td>\n      <td>[1.09283545107797, 1.0758940770811551, 1.05953...</td>\n      <td>[0.06444315995137456, 0.06569119617075751, 0.0...</td>\n      <td>[5.3692832472491885, 5.032731062206502, 4.7142...</td>\n      <td>[0.3878954289539703, 0.36588399604133715, 0.34...</td>\n      <td>[0.4413680815141847, 0.41771976878131545, 0.39...</td>\n      <td>[0.04954502843579181, 0.05067451694958326, 0.0...</td>\n      <td>[0.12229554748168381, 0.05837311643034407, -0....</td>\n      <td>[2018-09-02T00:00:00.000000000, 2018-09-03T00:...</td>\n      <td>[0.37198273396544956, 0.3521462789494104, 0.33...</td>\n    </tr>\n    <tr>\n      <th>38</th>\n      <td>9zv00u7vv7r</td>\n      <td>2008</td>\n      <td>9zv00</td>\n      <td>9zv00u7</td>\n      <td>9zv00u7vv</td>\n      <td>-94.180406</td>\n      <td>43.618102</td>\n      <td>2638</td>\n      <td>corn</td>\n      <td>[0.21655032309999994, 0.21167971548749995, 0.2...</td>\n      <td>...</td>\n      <td>[0.6532791573999996, 0.6442685212749997, 0.635...</td>\n      <td>[0.9930999128428565, 0.9894172873374995, 0.985...</td>\n      <td>[0.0935228940142857, 0.0927293686375, 0.091935...</td>\n      <td>[2.6917618916999997, 2.6678134904624997, 2.643...</td>\n      <td>[0.2954465449000001, 0.2910558050625001, 0.286...</td>\n      <td>[0.3245218118714285, 0.31988473388749994, 0.31...</td>\n      <td>[0.07004421972857144, 0.06961416357500001, 0.0...</td>\n      <td>[-0.17554894249999992, -0.1866578000499999, -0...</td>\n      <td>[2007-09-08T00:00:00.000000000, 2007-09-09T00:...</td>\n      <td>[0.27629586752857144, 0.27233666763750003, 0.2...</td>\n    </tr>\n  </tbody>\n</table>\n<p>3 rows × 46 columns</p>\n</div>","content_type":"text/html"},"text/plain":{"content":"      sample_id  year geohash_5 geohash_7  geohash_9        lon        lat  \\\n17  9zmhp42txzr  2010     9zmhp   9zmhp42  9zmhp42tx -93.910104  41.497719   \n97  dp1hxcshs9g  2019     dp1hx   dp1hxcs  dp1hxcshs -88.247483  40.175038   \n38  9zv00u7vv7r  2008     9zv00   9zv00u7  9zv00u7vv -94.180406  43.618102   \n\n    biomass crop_type                                               ndbr  ...  \\\n17     2338      corn  [0.8020385168710418, 0.761111421352999, 0.7212...  ...   \n97      933       soy  [0.5416618662580623, 0.49794495603168176, 0.45...  ...   \n38     2638      corn  [0.21655032309999994, 0.21167971548749995, 0.2...  ...   \n\n                                                  msr  \\\n17  [2.833344026642882, 2.605392583520121, 2.39049...   \n97  [1.3396010438805517, 1.2521736265218133, 1.168...   \n38  [0.6532791573999996, 0.6442685212749997, 0.635...   \n\n                                                  tvi  \\\n17  [1.18813572972331, 1.1612336370067855, 1.13585...   \n97  [1.09283545107797, 1.0758940770811551, 1.05953...   \n38  [0.9930999128428565, 0.9894172873374995, 0.985...   \n\n                                                  si1  \\\n17  [0.04697344634080947, 0.05942996108841286, 0.0...   \n97  [0.06444315995137456, 0.06569119617075751, 0.0...   \n38  [0.0935228940142857, 0.0927293686375, 0.091935...   \n\n                                                  rvi  \\\n17  [14.497812856094473, 13.271434815748242, 12.11...   \n97  [5.3692832472491885, 5.032731062206502, 4.7142...   \n38  [2.6917618916999997, 2.6678134904624997, 2.643...   \n\n                                                 tdvi  \\\n17  [0.7922603813634755, 0.7408201033375185, 0.692...   \n97  [0.3878954289539703, 0.36588399604133715, 0.34...   \n38  [0.2954465449000001, 0.2910558050625001, 0.286...   \n\n                                                osavi  \\\n17  [0.6888106469336722, 0.6450891646813475, 0.603...   \n97  [0.4413680815141847, 0.41771976878131545, 0.39...   \n38  [0.3245218118714285, 0.31988473388749994, 0.31...   \n\n                                                   si  \\\n17  [0.030679068250658387, 0.043937479459377066, 0...   \n97  [0.04954502843579181, 0.05067451694958326, 0.0...   \n38  [0.07004421972857144, 0.06961416357500001, 0.0...   \n\n                                                  nli  \\\n17  [0.8447933525916264, 0.7432393664406607, 0.646...   \n97  [0.12229554748168381, 0.05837311643034407, -0....   \n38  [-0.17554894249999992, -0.1866578000499999, -0...   \n\n                                                 date  \\\n17  [2009-09-05T00:00:00.000000000, 2009-09-06T00:...   \n97  [2018-09-02T00:00:00.000000000, 2018-09-03T00:...   \n38  [2007-09-08T00:00:00.000000000, 2007-09-09T00:...   \n\n                                                 rdvi  \n17  [0.6436694696741146, 0.6028117506307256, 0.564...  \n97  [0.37198273396544956, 0.3521462789494104, 0.33...  \n38  [0.27629586752857144, 0.27233666763750003, 0.2...  \n\n[3 rows x 46 columns]","content_type":"text/plain"}}}],"key":"HO5o0yTZII"}],"key":"EqWw5Fsy40"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"rows = data[data.sample_id == data.sample().sample_id.iloc[0]]\nrows = rows.sort_values('year').reset_index(drop=True)","key":"p9HhbHtOvC"},{"type":"output","id":"MInXHx0pPbu5cpsXAmJOe","data":[],"key":"zXz0fTamLM"}],"key":"TQcTvsLp38"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"utils = reload(utils)\ndef filter_dates(row):\n    return dict(date=slice(f'{row.year-1}-{START_MMDD}', f'{row.year}-{END_MMDD}'))\n    \nds = utils.rows_to_xr(\n    rows, \n    coord='date', \n    sel=filter_dates, \n    attr_cols=ATTR_COLS,\n    list_attrs=LIST_ATTRS)\nds","key":"wBmTsPoJie"},{"type":"output","id":"8YVVk-f1ZqTcmwRoIHUWj","data":[{"output_type":"execute_result","execution_count":11,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"ecab4244e5dc89fe7e1e8154f33fbe68","path":"/build/ecab4244e5dc89fe7e1e8154f33fbe68.html"},"text/plain":{"content":"<xarray.Dataset>\nDimensions:   (date: 4395)\nCoordinates:\n  * date      (date) datetime64[ns] 2007-11-01 2007-11-02 ... 2019-11-01\nData variables: (12/36)\n    ndbr      (date) float64 -0.1972 -0.196 -0.1941 ... 0.2481 0.2495 0.2509\n    ndvi      (date) float64 0.1673 0.1652 0.1629 ... 0.2764 0.2667 0.2566\n    grvi      (date) float64 1.702 1.684 1.665 1.645 ... 2.451 2.385 2.32 2.255\n    ndwi      (date) float64 -0.2543 -0.2484 -0.2422 ... -0.4093 -0.3979 -0.3858\n    slavi     (date) float64 0.4503 0.4501 0.4501 ... 0.7933 0.7765 0.7619\n    ndmi      (date) float64 -0.2768 -0.2731 -0.2688 ... 0.008362 0.01423\n    ...        ...\n    rvi       (date) float64 1.409 1.404 1.399 1.393 ... 1.642 1.565 1.496 1.434\n    tdvi      (date) float64 0.08235 0.08073 0.07905 ... 0.1372 0.1305 0.1241\n    osavi     (date) float64 0.1015 0.09983 0.09806 ... 0.1672 0.1602 0.1532\n    si        (date) float64 0.1032 0.1061 0.1094 0.113 ... 0.1254 0.1344 0.1441\n    nli       (date) float64 -0.6237 -0.6243 -0.6246 ... -0.5074 -0.5128 -0.5168\n    rdvi      (date) float64 0.0849 0.08348 0.08198 ... 0.1402 0.1343 0.1283\nAttributes:\n    sample_id:  cbhb01bbyjy\n    lon:        -94.5690164606\n    lat:        45.0097736326\n    year:       [2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, ...\n    biomass:    [669, 2844, 811, 2704, 693, 2268, 648, 3176, 836, 3459, 790, ...\n    crop_type:  ['soy', 'corn', 'soy', 'corn', 'soy', 'corn', 'soy', 'corn', ...","content_type":"text/plain"}}}],"key":"OCF6A4TFKo"}],"key":"nEEQ17URIH"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"yield_biomass = { y: b for y,b in zip(ds.year, ds.biomass)}\ncrop_types = { y: b for y,b in zip(ds.year, ds.crop_type)}\ndvars = { k: ds[k].data for k in ds.data_vars }\n_df = pd.DataFrame(dvars)\n_df['date'] = ds.date.data\n_df['idx'] = list(_df.index)\n_df['year'] = _df.date.apply(lambda d: d.year)\n_df['biomass'] = _df.year.apply(lambda y: yield_biomass.get(y, None))\n_df['crop_type'] = _df.year.apply(lambda y: crop_types.get(y, 'soy'))","key":"mmdtGr4FeE"},{"type":"output","id":"3jezlp6si03IjzrFizD6u","data":[],"key":"e6cchFU8hh"}],"key":"fWjWlyNw86"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"_df.date.astype(str)","key":"yg1SUFJ4Xa"},{"type":"output","id":"-0u1D6yjMTnLINPw-iLhK","data":[{"output_type":"execute_result","execution_count":13,"metadata":{},"data":{"text/plain":{"content":"0       2007-11-01\n1       2007-11-02\n2       2007-11-03\n3       2007-11-04\n4       2007-11-05\n           ...    \n4390    2019-10-28\n4391    2019-10-29\n4392    2019-10-30\n4393    2019-10-31\n4394    2019-11-01\nName: date, Length: 4395, dtype: object","content_type":"text/plain"}}}],"key":"aqaaJvJiE0"}],"key":"roCs9yDr5X"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# _df['date'] = _df.date.astype(str).apply(lambda d: f'{d}T00:00:01.000Z')\n# _df['date'] = pd.to_datetime(_df.date.astype(str))\n# _df.to_json(CHART_DATA_PATH, orient='records', lines=False)","key":"E1kgp8NRYc"},{"type":"output","id":"7Vkx_VQTLNLmZNU5cjwnU","data":[],"key":"VwhZH5Szdc"}],"key":"x1Lfem0UUQ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"kr8zWExUME"},{"type":"heading","depth":2,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"CHART","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"RyFpFLRA1Z"}],"identifier":"chart","label":"CHART","html_id":"chart","implicit":true,"key":"hHBpDSwfmW"}],"key":"GCbGAjs3SJ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"S = 1.25\nDEFAULT_INDEX = 'ndvi'\nHEIGHT = 400 * S\nGRAPH_WIDTH = 600 * S\nSI_COLOR = '#515e68'\nSI_OPACITY = 0.6\nYIELD_OPACITY = 0.5\nTITLE_COLOR = '#333'\nTITLE_SIZE = 22\nTITLE_WEIGHT = 200\nSUBTITLE_COLOR = '#aaa'\nSUBTITLE_SIZE = 14\nSOY_COLOR = '#4e9561'\nCORN_COLOR = '#e2d644'","key":"bM32S1DSJz"},{"type":"output","id":"SjJqSF6gELxU4hDSil5FP","data":[],"key":"gS1dt68eav"}],"key":"osvLRRg8Wr"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"TITLE = 'SPECTRAL TRENDS'\nSUBTITLE = 'exploring yield as a function of spectral indices'","key":"gZCTw6jraY"},{"type":"output","id":"UmEtt0Laj0VGLd9FniWdX","data":[],"key":"XBpYzLxmXA"}],"key":"YCYPmghHk5"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"chart_data = _df\n# chart_data = CHART_DATA_PATH","key":"nQNELqSxFs"},{"type":"output","id":"z_AlHELb7AcC2jGQ9Wjfs","data":[],"key":"GRw6WhwYdQ"}],"key":"QN0rOebJKo"},{"type":"block","kind":"notebook-code","data":{"placeholder":"./images/TBD.png"},"children":[{"type":"code","lang":"python","executable":true,"value":"# alt.data_transformers.enable(\"vegafusion\")\n\ndisplay(HTML(\"\"\"\n<style>\n  span.vega-bind-name {\n    color: #555;\n    margin: 0 10px 0 60px;\n    font-size: 20px;\n  }\n  .vega-bind label select {\n    color: #555;\n    font-size: 18px;\n  }\n</style>\n\"\"\"))\n\n# yield chart\nyield_scale = alt.Scale(\n    domain=[0.0, 3000],\n    clamp=True\n)\nyield_color_scale = alt.Scale(\n    domain=['soy', 'corn'], \n    range=[SOY_COLOR, CORN_COLOR])\nyield_yaxis = alt.Axis(title='Biomass Yield', titleFontSize=18, titleColor=TITLE_COLOR, titleFontWeight=TITLE_WEIGHT)\nyield_chart = alt.Chart(chart_data).encode(\n    x=alt.X('date:T', title=None),\n    y=alt.Y('biomass:Q', axis=yield_yaxis, scale=yield_scale),\n    color=alt.Color('crop_type:N', scale=yield_color_scale)\n).mark_area(\n    filled=True,\n    opacity=YIELD_OPACITY,\n    interpolate='step-before')\n\n# interactive spectral index chart\nsi_yaxis = alt.Axis(title='Spectral Index', titleFontSize=18, titleColor=TITLE_COLOR, titleFontWeight=TITLE_WEIGHT)\nsi_dropdown = alt.binding_select(\n    options=INDICES,\n    labels=[n.upper() for n in INDICES],\n    name='Spectral Index: '.upper()\n)\nycol_param = alt.param(\n    value=DEFAULT_INDEX,\n    bind=si_dropdown\n)\nsi_chart = alt.Chart(chart_data).encode(\n    x=alt.X('date:T', title=None),\n    y=alt.Y('y:Q', axis=si_yaxis)\n).properties(\n    width=GRAPH_WIDTH,\n    height=HEIGHT\n).transform_calculate(\n    y=f'datum[{ycol_param.name}]'\n).add_params(\n    ycol_param\n).mark_area(\n    fill=SI_COLOR,\n    fillOpacity=SI_OPACITY\n)\n\n# display\ntitle = alt.Title(\n    TITLE,\n    color=TITLE_COLOR,\n    fontSize=TITLE_SIZE,\n    fontWeight=TITLE_WEIGHT,\n    subtitle=SUBTITLE,\n    subtitleColor=SUBTITLE_COLOR,\n    subtitleFontSize=SUBTITLE_SIZE)\n\nchart = alt.layer(yield_chart, si_chart).resolve_scale(y='independent')\nchart = chart.properties(\n    title=title).configure_legend(\n    title=None,\n    labelFontSize=18,  \n    labelColor=SUBTITLE_COLOR \n).interactive()\nchart ","identifier":"nb.indices_vs_yield-code","enumerator":"1","html_id":"nb-indices-vs-yield-code","key":"HekfqeHr3c"},{"type":"output","id":"c3qPo_0dQGlcoxdBpfE7I","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n<style>\n  span.vega-bind-name {\n    color: #555;\n    margin: 0 10px 0 60px;\n    font-size: 20px;\n  }\n  .vega-bind label select {\n    color: #555;\n    font-size: 18px;\n  }\n</style>\n","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"8675ffcc4bc1ba9bcdc0d1e6ff86a9a0","path":"/build/8675ffcc4bc1ba9bcdc0d1e6ff86a9a0.html"},"text/plain":{"content":"alt.LayerChart(...)","content_type":"text/plain"}}}],"identifier":"nb.indices_vs_yield-output","html_id":"nb-indices-vs-yield-output","children":[{"type":"image","placeholder":true,"url":"/myst_assets_folder./images/TBD.png","key":"DbxwW5scoH"}],"key":"WnPlkqpiCv"}],"identifier":"nb.indices_vs_yield","label":"nb.indices_vs_yield","html_id":"nb-indices-vs-yield","key":"cRumik1CiN"}],"key":"lYaq46m4QE"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Scripts","url":"/scripts","group":"Spectral Trend Database"}}},"domain":"http://localhost:3001"}